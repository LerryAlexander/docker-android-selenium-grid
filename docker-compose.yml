version: '3'

services:

  # test container service for holding test automation project and running the tests
  test_container:
    entrypoint: /bin/sh
    command: -c "./docker-resources/wait-for-grid.sh && ./docker-resources/wait_emulator_to_be_ready.sh && ./gradlew clean test" #wait for grid to be ready, then wait until emulators are up and running and then execute the tests
    image: test_container
    container_name: test_container
    volumes:
      - ./tests-output/testngOutput/:/docker_selenium_grid/tests-output/testngOutput/ #path to TestNG reports
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: "/docker_selenium_grid/"
    hostname: test_container_hostname
    networks:
      docker_network:
        aliases:
          - selenium_hub
          - node_samsung_s6
          - node_samsung_s10
    depends_on:
      - selenium_hub
      #- node_samsung_s6
      #- node_samsung_s10
    environment:
      - DOCKER_SELENIUM_PORT=4444
      - DOCKER_SELENIUM_HOST=selenium_hub
      - DOCKER_EMULATOR_SAMSUNG_S6=samsung_s6_container
      - DOCKER_EMULATOR_SAMSUNG_S10=samsung_s10_container
    ports:
      - "8000:8000"
    #restart: on-failure

  # Selenium hub
  selenium_hub:
    image: selenium/hub
    container_name: selenium-hub
    hostname: selenium-hub
    networks:
      - docker_network
    ports:
      - "4444:4444"

  # Service for Docker Android (Samsung Galaxy S6)
  node_samsung_s6:
    image: budtmo/docker-android-x86-6.0
    container_name: samsung_s6_container
    privileged: true
    networks:
      - docker_network
    depends_on:
      - selenium_hub
    ports:
      - "6080:6080"
    volumes:
      - /dev/bus/usb:/dev/bus/usb
      - ~/.android:/root/.android
      - ./src/test/resources/TheApp-v1.8.0.apk:/root/apk/TheApp-v1.8.0.apk
      - ./tests-output/video/video-samsung-galaxy-s6:/tmp/video # path to tests video execution
      - ./docker-resources/check_docker_android_device.sh:/root/check_docker_android_device.sh
    environment:
      - DEVICE=Samsung Galaxy S6
      - CONNECT_TO_GRID=true
      - APPIUM=true
      - SELENIUM_HOST=selenium_hub
      - MOBILE_WEB_TEST=false
      - AUTO_RECORD=true
    healthcheck:
      test: ["CMD-SHELL", "/root/check_docker_android_device.sh"]
      interval: 60s
      timeout: 30s
      retries: 3
    #labels:
      #autoheal: "true"  # allow docker-autoheal to restart if unhealthy

  # Service for Docker Android (Samsung Galaxy S10)
  node_samsung_s10:
    image: budtmo/docker-android-x86-10.0
    container_name: samsung_s10_container
    privileged: true
    networks:
      - docker_network
    depends_on:
      - selenium_hub
    ports:
      - "6081:6080"
    volumes:
      - /dev/bus/usb:/dev/bus/usb
      - ~/.android:/root/.android
      - ./src/test/resources/TheApp-v1.8.0.apk:/root/apk/TheApp-v1.8.0.apk
      - ./tests-output/video/video-samsung-galaxy-s10:/tmp/video # path to tests video execution
      - ./docker-resources/check_docker_android_device.sh:/root/check_docker_android_device.sh
    environment:
      - DEVICE=Samsung Galaxy S10
      - CONNECT_TO_GRID=true
      - APPIUM=true
      - SELENIUM_HOST=selenium_hub
      - MOBILE_WEB_TEST=false
      - AUTO_RECORD=true
    healthcheck:
      test: ["CMD-SHELL", "/root/check_docker_android_device.sh"]
      interval: 60s
      timeout: 30s
      retries: 3
    #labels:
      #autoheal: "true"  # allow docker-autoheal to restart if unhealthy

    #autoheal:
    #restart: always
    #image: willfarrell/autoheal
        #environment:
      #- AUTOHEAL_CONTAINER_LABEL=all
        #volumes:
      #- /var/run/docker.sock:/var/run/docker.sock
        #depends_on:
        #- node_samsung_s6
      #- node_samsung_s10s

networks:
  docker_network:


